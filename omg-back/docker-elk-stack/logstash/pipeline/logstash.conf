input {
  kafka {
    bootstrap_servers => "kafka:9092"
    topics => ["OMG"]
    group_id => "logstash"
    auto_offset_reset => "latest"
    consumer_threads => 3
    decorate_events => true
  }
}

filter {
    json {
    source => "message"
    }

    grok {
        match => { "[message][message]" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:log_level} %{DATA:logger} - %{GREEDYDATA:log_message}" }
    }

    date {
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
        target => "@timestamp"
    }

    if [log_level] == "ERROR" {
        mutate {
            add_field => {
            "error_type" => "application_error"
            "slack_message" => "에러 발생:\nTimestamp: %{timestamp}\nThread: %{thread}\nLogger: %{logger}\nMessage: %{log_message}"
            }
        }
    }
}

output {
    if [log_level] == "ERROR" {
            http {
                url => "${SLACK_WEBHOOK_URL}"
                http_method => "post"
                format => "json"
                content_type => "application/json"
                message => { "text" => "%{slack_message}" }
            }
            elasticsearch {
                hosts => ["http://elasticsearch:9200"]
                index => "omg-game-error-log-%{+YYYY.MM.dd}"
                user => "${ELASTIC_USERNAME}"
                password => "${ELASTIC_PASSWORD}"
            }
        } else {
            elasticsearch {
                hosts => ["http://elasticsearch:9200"]
                index => "omg-game-log-%{+YYYY.MM.dd}"
                user => "${ELASTIC_USERNAME}"
                password => "${ELASTIC_PASSWORD}"
            }
        }
}